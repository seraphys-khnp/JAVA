3일차

예전 dos 시절 AUTOEXE.BAT 파일 편집으로 초기세팅하던 경험
주변에서 CTO급으로 대접을 해주는데
일단 그런 기분을 느끼는 것도 중요한 경험.

회계공부 경험.
공부하면서 한명씩 자꾸 늘어나면서, 했던 강의를 계속 하게됨.
그런데 듣다보니 강사없이도 혼자 공부할 수 있게됨.
너무 쉬워서 지루하긴 해도 가장 중요한 단계.

Command 창이 가지는 장점
- 원하는 것들을 순차적으로 실행시킬 수 있다?
- 나름 자동화?

코딩은 자동화를 하기 위해 하는 것이다.

버젼관리 : 작업했던 것을 손상시키지 않고, 과거로 돌아갈 수 있다.

출력을 화면이 아니라
파일, 이메일, 소리로 출력하려면 어떻게 해야 하나?

좋은 부품은 기능이 하나이고, 그런 부품들이 모여서 하나의 완제품이 되는 것이 좋다.
만약 부품이 기능이 여러가지라면 그것은 부품보다는 완제품이다.

2교시
Statements 와 Expression

Expression은 그 자체로 값이 되는 것
1+1, 3-1은 2에 대한 표현식.
Math.floor(1.8)은 1에 대한 표현식

Statements는 값이 아니다.
Method를 정의하는 부분도 값이 아니다.
호출해서 사용하는 부분에서는 값이 될 수 있다.

Method 선언중에 void는 값을 리턴하지 않고
void 대신 Data Type을 지정해주면 그 Type으로 리턴한다.

클래스명 앞에 new를 붙이면 클래스를 복제해서
이름을 붙이는데 이것을 instance라고 한다.

return 뒤에 있는 코드는 실행되지 않고, method가 종료된다.
나중에 조건문같은 것에서 많이 사용한다.

Method와 Variable들을 그룹핑한 것이 Class이다.

3교시
안드로이드 개발 전용환경 -> 안드로이드 스튜디오
JAVA로 할 수 있다.
내일부터 Web Application 교육한다.

현실에서 DATA를 추출하고 그것을 처리하는 방법

그루핑을 하면 Eclipse에서 Tax.을 하면 추천을 해준다.
그것이 class
class 안의 변수든 Method든 모두 멤버다.

main 코드에서 감출 수 있는 것들은 최대한 감춘다.
class를 이용해서.
감출 수 있는 것? -> argument
약간의 실수가 심각한 문제를 일으킬 수 있다.
인적오류를 방지하기 위한 코드작성을 해야 한다.

지금부터 하는 것은 작은 코드에서는 불필요하지만,
커다란 코드에서는 무조건 필요하다.

4교시
지금까지 하나의 클래스로 돌려막기.

인스턴스와 생성자 사용.

git으로 버젼관리 하면서 보존할 수 있다.
공유도 할 수 있다.
코드 보면서 복습할 것.